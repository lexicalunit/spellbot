> * `channel <list>`: Set SpellBot to only respond in the given list of channels.
> * `prefix <string>`: Set SpellBot's command prefix for text channels.
> * `links <string>`: Set the privacy level for generated SpellTable links.
> * `expire <number>`: Set the number of minutes before pending games expire.
> * `teams <list>`: Sets the teams available on this server.
> * `help`: Get detailed usage help for SpellBot.

`!game @player1 @player2 ... [~tag-1 ~tag-2] [msg: Hello world!]`
>  Create a game between mentioned users. _Requires the "SpellBot Admin" role._
> 
> Allows event runners to spin up an ad-hoc game directly between mentioned players.
> * The user who issues this command is **NOT** added to the game themselves.
> * You must mention all of the players to be seated in the game.
> * Optional: Add a message by using `msg:` followed by the message content.
> * Optional: Add tags by using `~tag-name` for the tags you want.

`!export`
>  Exports historical game data to a CSV file. _Requires the "SpellBot Admin" role._

`!event <column 1> <column 2> ... [~tag-1 ~tag-2 ...] [msg: An optional message!]`
>  Create many games in batch from an attached CSV data file. _Requires the "SpellBot Admin" role._
> 
> For example, if your event is for a Modern tournement you might attach a CSV file with a comment like `!event Player1Username Player2Username`. This would assume that the players' discord user names are found in the "Player1Username" and "Player2Username" CSV columns. The game size is deduced from the number of column names given, so we know the games created in this example are `size:2`.
> 
> Games will not be created immediately. This is to allow you to verify things look ok. This command will also give you directions on how to actually start the games for this event as part of its reply.
> * Optional: Add a message to DM players with `msg:` followed by whatever.
> * Optional: Add up to five tags by using `~tag-name`.

`!begin <event id>`