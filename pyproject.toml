[project]
authors = [{name = "Amy Troschinetz", email = "spellbot@lexicalunit.com"}]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: End Users/Desktop",
  "Topic :: Communications :: Chat",
  "Topic :: Games/Entertainment :: Board Games",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "aiohttp-jinja2<2.0,>=1.6",
  "aiohttp-retry<3.0.0,>=2.8.3",
  "aiohttp<4.0.0,>=3.9.4",
  "alembic<2.0.0,>=1.13.1",
  "asgiref<4.0.0,>=3.8.1",
  "attrs<26,>=23.2.0",
  "babel<3.0.0,>=2.14.0",
  "cachetools<6.0.0,>=5.5.0",
  "certifi<2026.0.0,>=2024.2.2",
  "click<9.0.0,>=8.1.7",
  "coloredlogs<16.0.0,>=15.0.1",
  "datadog<0.52,>=0.49.1",
  "ddtrace<4.0,>=2.8.0",
  "discord-py<3.0.0,>=2.3.2",
  "dunamai<2.0.0,>=1.19.2",
  "gunicorn<24.0,>=21.2.0",
  "humanize<5.0.0,>=4.9.0",
  "hupper<2.0.0,>=1.12.1",
  "importlib-resources<7.0,>=6.4.0",
  "packaging<26.0,>=24.0",
  "playwright<2.0.0,>=1.49.1",
  "psycopg[binary]<4.0.0,>=3.2.9",
  "python-dateutil<3.0.0,>=2.8.2",
  "python-dotenv<2.0.0,>=1.0.1",
  "pyyaml<7.0.0,>=6.0.1",
  "redis<7.0.0,>=6.1.0",
  "requests<3.0.0,>=2.31.0",
  "sqlalchemy-utils<1.0.0,>=0.41.2",
  "sqlalchemy<3.0.0,>=2.0.41",
  "supervisor<5.0.0,>=4.2.5",
  "tenacity<10.0.0,>=9.0.0",
  "toml<1.0.0,>=0.10.2",
  "uvloop<0.22,>=0.19",
  "wrapt<2.0.0,>=1.16.0",
]
description = "The Discord bot for SpellTable"
keywords = ["discord", "magic", "bot", "mtg", "SpellTable"]
license = {text = "MIT"}
name = "spellbot"
readme = "README.md"
requires-python = "<4,>=3.12"
version = "15.2.0"

[project.urls]
homepage = "http://spellbot.io/"
repository = "https://github.com/lexicalunit/spellbot"

[project.scripts]
spellbot = "spellbot:main"

[dependency-groups]
dev = [
  "callee>=0",
  "coverage>=7",
  "exceptiongroup>=1",
  "factory-boy>=3",
  "faker>=24",
  "gitpython>=3",
  "ipython>=9",
  "nest-asyncio>=1",
  "pexpect>=4",
  "ptyprocess>=0",
  "pylic>=3",
  "pyright>=1",
  "pytest-aiohttp>=1",
  "pytest-asyncio>=0",
  "pytest-cov>=6",
  "pytest-freezer>=0",
  "pytest-mock>=3",
  "pytest-socket>=0",
  "pytest-xdist>=3",
  "pytest>=8",
  "ruff>=0",
  "shellingham>=1",
  "sqlalchemy-stubs>=0",
  "syrupy>=4",
  "tomli>=2",
  "tomlkit>=0",
  "types-cachetools>=5",
  "types-python-dateutil>=2",
  "types-pyyaml>=6",
  "types-toml>=0",
  "virtualenv>=20",
]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.pyright]
enableTypeIgnoreComments = true
ignore = [".venv", "dist"]
reportMatchNotExhaustive = true
reportMissingParameterType = true
reportMissingTypeArgument = true
reportUnnecessaryTypeIgnoreComment = "error"
typeCheckingMode = "basic"

[tool.ruff]
exclude = [
  "__pypackages__",
  "_build",
  ".bzr",
  ".direnv",
  ".eggs",
  ".env",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".venv",
  "buck-out",
  "build",
  "dist",
  "env",
  "node_modules",
  "venv",
]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
extend-select = ["ALL"]
ignore = [
  "A001",
  "A002",
  "A005",
  "ANN202",
  "ANN401",
  "ARG001",
  "ARG002",
  "ARG003",
  "ARG005",
  "BLE001",
  "COM812",
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D106",
  "D107",
  "D203",
  "D211",
  "D212",
  "ERA001",
  "FBT001",
  "FBT002",
  "FBT003",
  "FIX002",
  "ISC001",
  "N801",
  "N802",
  "N806",
  "PGH003",
  "PIE796",
  "PLR0911",
  "PLR0913",
  "PLR2004",
  "S101",
  "TD002",
  "TD003",
]
[tool.ruff.lint.per-file-ignores]
"src/spellbot/migrations/*" = ["INP001"]
"src/spellbot/operations.py" = ["RET504"]
"tests/*" = [
  "EM101",
  "PT004",
  "S105",
  "SLF001",
  "TRY003",
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 100
max-line-length = 100

[tool.pylic]
safe_licenses = [
  "3-Clause BSD License",
  "Apache 2.0",
  "Apache Software License",
  "Apache-2.0",
  "BSD License",
  "BSD-2-Clause",
  "BSD-3-Clause",
  "BSD-derived (http://www.repoze.org/LICENSE.txt)",
  "ISC License (ISCL)",
  "LICENSE.BSD3",
  "MIT AND Python-2.0",
  "MIT License",
  "MIT",
  "Mozilla Public License 2.0 (MPL 2.0)",
  "PSF-2.0",
  "Python Software Foundation License",
  "Unlicense",
]
# Psycopg uses LGPLv3, which is ok to link against, but otherwise not compatible with permissive
# with the license of this project. We can explicitly ignore it here since we're only linking.
unsafe_packages = ["psycopg-binary", "psycopg"]

[tool.pytest.ini_options]
addopts = """
    --no-header --disable-socket --allow-unix-socket --allow-hosts=127.0.0.1,::1 --cov --cov-append --cov-report xml:coverage.xml --cov-report=html -vv
"""
asyncio_default_fixture_loop_scope = "function"
